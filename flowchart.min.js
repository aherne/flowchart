class FlowchartConfigurer{#t={};setRectangleSizes(t,i){this.#t.rectangleWidth=t,this.#t.rectangleHeight=i}setArrowSizes(t,i){this.#t.arrowWidth=t,this.#t.arrowHeight=i}setLineSizes(t,i){this.#t.lineWidth=t,this.#t.lineHeight=i}setFontInfo(t,i){this.#t.fontFamily=t,this.#t.fontColor=i}getAll(){if(!(this.#t.hasOwnProperty("rectangleWidth")&&this.#t.hasOwnProperty("arrowWidth")&&this.#t.hasOwnProperty("lineWidth")&&this.#t.hasOwnProperty("fontFamily")))throw"Flowchart: using all setters is mandatory";return this.#t}}class FlowchartPositions{#i=[];addRow(t){if(this.#i.length>0&&this.#i[this.#i.length-1].length!=t.length)throw"Each row must have same columns number";this.#i.push(t)}getAll(){if(0==this.#i.length)throw"Flowchart: at least one row is mandatory";return this.#i}}class FlowchartCanvas{#e;constructor(t,i,e,n){this.#e=n;var h=document.getElementById(t);h.width=i,h.height=e,this.ctx=h.getContext("2d"),this.ctx.clearRect(0,0,i,e)}#n(t,i,e,n){this.ctx.beginPath(),this.ctx.moveTo(t,i),this.ctx.lineTo(e,n),this.ctx.stroke()}drawRectangle(t,i,e){this.ctx.lineWidth=1,this.ctx.rect(t,i,this.#e.rectangleWidth,this.#e.rectangleHeight),this.ctx.fillStyle=e,this.ctx.strokeRect(t,i,this.#e.rectangleWidth,this.#e.rectangleHeight),this.ctx.fillRect(t,i,this.#e.rectangleWidth,this.#e.rectangleHeight)}drawText(t,i,e,n,h){this.ctx.font=this.#e.fontFamily,this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillStyle=h||this.#e.fontColor,this.ctx.fillText(t,i,e,n)}drawHorizontalLine(t,i,e,n){this.ctx.strokeStyle=n,this.#n(t,i,t+e,i),this.ctx.strokeStyle="black"}drawVerticalLine(t,i,e,n){this.ctx.strokeStyle=n,this.#n(t,i,t,i+e),this.ctx.strokeStyle="black"}drawRightArrow(t,i,e){this.ctx.fillStyle=e,this.ctx.beginPath(),this.ctx.moveTo(t,i),this.ctx.lineTo(t-this.#e.arrowHeight,i-this.#e.arrowWidth),this.ctx.lineTo(t-this.#e.arrowHeight,i+this.#e.arrowWidth),this.ctx.fill(),this.ctx.fillStyle="black"}drawLeftArrow(t,i,e){this.ctx.fillStyle=e,this.ctx.beginPath(),this.ctx.moveTo(t,i),this.ctx.lineTo(t+this.#e.arrowHeight,i-this.#e.arrowWidth),this.ctx.lineTo(t+this.#e.arrowHeight,i+this.#e.arrowWidth),this.ctx.fill(),this.ctx.fillStyle="black"}drawTopArrow(t,i,e){this.ctx.fillStyle=e,this.ctx.beginPath(),this.ctx.moveTo(t,i),this.ctx.lineTo(t-this.#e.arrowWidth,i+this.#e.arrowHeight),this.ctx.lineTo(t+this.#e.arrowWidth,i+this.#e.arrowHeight),this.ctx.fill(),this.ctx.fillStyle="black"}drawBottomArrow(t,i,e){this.ctx.fillStyle=e,this.ctx.beginPath(),this.ctx.moveTo(t,i),this.ctx.lineTo(t+this.#e.arrowWidth,i-this.#e.arrowHeight),this.ctx.lineTo(t-this.#e.arrowWidth,i-this.#e.arrowHeight),this.ctx.fill(),this.ctx.fillStyle="black"}}class Flowchart{#h={};#s=5;#l=5;#o;#e;constructor(t,i,e){this.#e=i;let n=this.#l+i.lineHeight/2;for(var h=0;h<t.length;h++){let e=n+h*(i.rectangleHeight+i.lineHeight);for(var s=0;s<t[h].length;s++)if(""!=t[h][s]){let n=this.#s+s*(i.rectangleWidth+i.lineWidth);this.#h[t[h][s]]={x:n,y:e}}}let l=2*this.#s+t[0].length*(i.rectangleWidth+i.lineWidth)-i.lineWidth,o=2*n+t.length*(i.rectangleHeight+i.lineHeight)-i.lineHeight;this.#o=new FlowchartCanvas(e,l,o,i)}#c(t,i,e,n,h,s,l,o){let c=l?this.#e.rectangleWidth:0,r=this.#h[t].y+n*this.#e.rectangleHeight-this.#h[i].y-h*this.#e.rectangleHeight,a=0;o?(a=this.#h[t].x-s*this.#e.lineWidth,console.log(a),this.#o.drawHorizontalLine(this.#h[t].x,this.#h[t].y+this.#e.rectangleHeight*n,-s*this.#e.lineWidth,e)):(a=this.#h[t].x+this.#e.rectangleWidth+s*this.#e.lineWidth,this.#o.drawHorizontalLine(this.#h[t].x+this.#e.rectangleWidth,this.#h[t].y+this.#e.rectangleHeight*n,s*this.#e.lineWidth,e)),this.#o.drawVerticalLine(a,this.#h[i].y+this.#e.rectangleHeight*h,r,e),this.#o.drawHorizontalLine(a,this.#h[i].y+this.#e.rectangleHeight*h,this.#h[i].x+c-a,e),l?this.#o.drawLeftArrow(this.#h[i].x+c,this.#h[i].y+this.#e.rectangleHeight*h,e):this.#o.drawRightArrow(this.#h[i].x,this.#h[i].y+this.#e.rectangleHeight*h,e)}#r(t,i,e,n,h,s,l,o){let c=this.#h[t].x+n*this.#e.rectangleWidth,r=this.#h[t].y+(o?0:this.#e.rectangleHeight),a=this.#h[i].x+h*this.#e.rectangleWidth,g=this.#h[i].y+(l?this.#e.rectangleHeight:0);this.#o.drawVerticalLine(c,r,-s,e),this.#o.drawHorizontalLine(c,r-s,a-c,e),this.#o.drawVerticalLine(a,g,r-s-g,e),l?this.#o.drawTopArrow(a,g,e):this.#o.drawBottomArrow(a,g,e)}#a(t,i,e,n,h,s,l){let o=s?this.#e.rectangleHeight:0,c=l?0:this.#e.rectangleWidth,r=this.#h[t].y+n*this.#e.rectangleHeight-this.#h[i].y-o,a=this.#h[i].x-this.#h[t].x+h*this.#e.rectangleWidth-c;this.#o.drawHorizontalLine(this.#h[t].x+c,this.#h[t].y+this.#e.rectangleHeight*n,a,e),this.#o.drawVerticalLine(this.#h[i].x+h*this.#e.rectangleWidth,this.#h[i].y+o,r,e),s?this.#o.drawTopArrow(this.#h[i].x+h*this.#e.rectangleWidth,this.#h[i].y+o,e):this.#o.drawBottomArrow(this.#h[i].x+h*this.#e.rectangleWidth,this.#h[i].y,e)}#g(t,i,e,n,h,s,l){let o=this.#h[i].y-this.#h[t].y+h*this.#e.rectangleHeight-(l?0:this.#e.rectangleHeight),c=this.#h[i].x-this.#h[t].x-n*this.#e.rectangleWidth+(s?this.#e.rectangleWidth:0);var r=s?this.#e.rectangleWidth:0;let a=this.#h[t].x+n*this.#e.rectangleWidth;this.#o.drawVerticalLine(a,this.#h[t].y+(l?0:this.#e.rectangleHeight),o,e),this.#o.drawHorizontalLine(a,this.#h[t].y+o+(l?0:this.#e.rectangleHeight),c,e),s?this.#o.drawLeftArrow(this.#h[i].x+(s?this.#e.rectangleWidth:0),this.#h[i].y+this.#e.rectangleHeight*h,e):this.#o.drawRightArrow(this.#h[i].x+r,this.#h[i].y+this.#e.rectangleHeight*h,e)}rectangle(t,i){this.#o.drawRectangle(this.#h[t].x,this.#h[t].y,i),this.#o.drawText(t,this.#h[t].x+this.#e.rectangleWidth/2,this.#h[t].y+this.#e.rectangleHeight/2,this.#e.rectangleWidth)}text(t,i,e=.5){this.#o.drawText(t,this.#h[t].x+this.#e.rectangleWidth/2,this.#h[t].y+this.#e.rectangleHeight*e,this.#e.rectangleWidth,i)}lineRightLeft(t,i,e,n=.5){let h=this.#h[i].x-this.#h[t].x-this.#e.rectangleWidth;this.#o.drawHorizontalLine(this.#h[t].x+this.#e.rectangleWidth,this.#h[t].y+this.#e.rectangleHeight*n,h,e),this.#o.drawRightArrow(this.#h[i].x,this.#h[i].y+this.#e.rectangleHeight*n,e)}lineLeftRight(t,i,e,n=.5){let h=this.#h[t].x-this.#h[i].x-this.#e.rectangleWidth;this.#o.drawHorizontalLine(this.#h[i].x+this.#e.rectangleWidth,this.#h[i].y+this.#e.rectangleHeight*n,h,e),this.#o.drawLeftArrow(this.#h[i].x+this.#e.rectangleWidth,this.#h[i].y+this.#e.rectangleHeight*n,e)}lineTopBottom(t,i,e,n=.5){let h=this.#h[t].y-this.#h[i].y-this.#e.rectangleHeight;this.#o.drawVerticalLine(this.#h[t].x+this.#e.rectangleWidth*n,this.#h[t].y,-h,e),this.#o.drawTopArrow(this.#h[i].x+this.#e.rectangleWidth*n,this.#h[i].y+this.#e.rectangleHeight,e)}lineBottomTop(t,i,e,n=.5){let h=this.#h[i].y-this.#h[t].y-this.#e.rectangleHeight;this.#o.drawVerticalLine(this.#h[i].x+this.#e.rectangleWidth*n,this.#h[i].y,-h,e),this.#o.drawBottomArrow(this.#h[i].x+this.#e.rectangleWidth*n,this.#h[i].y,e)}lineLeftLineLeft(t,i,e,n=.5,h=.5,s=.5){this.#c(t,i,e,n,h,s,!1,!0)}lineLeftLineRight(t,i,e,n=.5,h=.5,s=.5){this.#c(t,i,e,n,h,s,!0,!0)}lineLeftLineTop(t,i,e,n=.5,h=.5){this.#a(t,i,e,n,h,!1,!0)}lineLeftLineBottom(t,i,e,n=.5,h=.5){this.#a(t,i,e,n,h,!0,!0)}lineRightLineLeft(t,i,e,n=.5,h=.5,s=.5){this.#c(t,i,e,h,n,s,!1,!1)}lineRightLineRight(t,i,e,n=.5,h=.5,s=.5){this.#c(t,i,e,n,h,s,!0,!1)}lineRightLineTop(t,i,e,n=.5,h=.5){this.#a(t,i,e,n,h,!1,!1)}lineRightLineBottom(t,i,e,n=.5,h=.5){this.#a(t,i,e,n,h,!0,!1)}lineTopLineLeft(t,i,e,n=.5,h=.5){this.#g(t,i,e,n,h,!1,!0)}lineTopLineRight(t,i,e,n=.5,h=.5){this.#g(t,i,e,n,h,!0,!0)}lineTopLineTop(t,i,e,n=.5,h=.5,s=.5){let l=this.#h[i].y>=this.#h[t].y?this.#e.lineHeight*s:this.#h[t].y-this.#h[i].y+this.#e.lineHeight*s;this.#r(t,i,e,n,h,l,!1,!0)}lineTopLineBottom(t,i,e,n=.5,h=.5,s=.5){let l=this.#h[i].y<=this.#h[t].y?this.#e.lineHeight*s:this.#h[t].y-this.#h[i].y+this.#e.rectangleHeight+this.#e.lineHeight*s;this.#r(t,i,e,n,h,l,!0,!0)}lineBottomLineLeft(t,i,e,n=.5,h=.5){this.#g(t,i,e,n,h,!1,!1)}lineBottomLineRight(t,i,e,n=.5,h=.5){this.#g(t,i,e,n,h,!0,!1)}lineBottomLineTop(t,i,e,n=.5,h=.5,s=.5){let l=-(this.#h[i].y>=this.#h[t].y?this.#e.lineHeight*s:this.#h[t].y-this.#h[i].y+this.#e.lineHeight*s);this.#r(t,i,e,n,h,l,!1,!1)}lineBottomLineBottom(t,i,e,n=.5,h=.5,s=.5){let l=-(this.#h[i].y>=this.#h[t].y?this.#e.lineHeight*s+(this.#h[i].y-this.#h[t].y):this.#e.lineHeight*s);this.#r(t,i,e,n,h,l,!0,!1)}}
